name: CI - Quality Assurance

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10"]

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest pylint pytest-mock pytest-cov
          pip install -e .

      - name: Test with pytest
        run: |
          pytest

      - name: Upload coverage report
        uses: actions/upload-artifact@v2
        with:
          name: coverage-report
          path: coverage.xml

  lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"

      - name: Install pylint
        run: |
          python -m pip install --upgrade pip
          pip install pylint
          pip install -e .

      - name: Run pylint
        run: |
          pylint advsecurenet cli

  radon:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"

      - name: Install Radon
        run: |
          python -m pip install --upgrade pip
          pip install radon

      - name: Run Radon and enforce complexity
        id: radon
        run: |
          radon cc -s -a . > radon_output.txt
          AVERAGE_COMPLEXITY=$(awk '/Average complexity/ {print $3}' radon_output.txt)
          echo "Average complexity: $AVERAGE_COMPLEXITY"
          if [ "$AVERAGE_COMPLEXITY" != "A" ]; then
            echo "Average complexity is not A. It is $AVERAGE_COMPLEXITY."
            exit 1
          fi

  sonarcloud:
    name: SonarCloud
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis
      - name: Download coverage report
        uses: actions/download-artifact@v2
        with:
          name: coverage-report
          path: .
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  format:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"

      - name: Install Black
        run: |
          python -m pip install --upgrade pip
          pip install black

      - name: Run Black
        run: |
          black .

      - name: Commit changes
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add .
          git commit -m 'Format code with Black' || echo "No changes to commit"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
